/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ConsultaController;
import Entidades.Consulta;
import Entidades.Medico;
import Entidades.Paciente;
import Entidades.PlanoDeSaude;
import Persistencia.ConsultaDAO;
import Persistencia.MedicoDAO;
import Persistencia.PacienteDAO;
import Persistencia.PlanoDeSaudeDAO;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danilo
 * @author Pedro Paul
 */
public class TelaCadastroConsulta extends javax.swing.JFrame {

    int idConsulta;

    ConsultaDAO consultaDAO = new ConsultaDAO();
    MedicoDAO medicoDAO = new MedicoDAO();
    PacienteDAO pacienteDAO = new PacienteDAO();
    PlanoDeSaudeDAO planoDAO = new PlanoDeSaudeDAO();

    ConsultaController consultaController = new ConsultaController();
    SimpleDateFormat sdfData = new SimpleDateFormat("dd/MM/yyyy");
    DateTimeFormatter dtfData = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    SimpleDateFormat sdfHora = new SimpleDateFormat("HH:mm");
    DateTimeFormatter dtfHora = DateTimeFormatter.ofPattern("HH:mm");
    DefaultTableCellRenderer renderizadorDeCelula = new DefaultTableCellRenderer();

    public TelaCadastroConsulta() throws SQLException {

        initComponents();

        txtDataConsulta.setText(LocalDate.now().format(dtfData));
        txtHoraConsulta.setText(LocalTime.now().format(dtfHora));

        setLocationRelativeTo(null);

        renderizadorDeCelula.setHorizontalAlignment(SwingConstants.CENTER);

        tabelaCadastrosConsultas.getTableHeader().setDefaultRenderer(renderizadorDeCelula);

        for (int i = 0; i < tabelaCadastrosConsultas.getColumnCount(); i++) {
            if (i != 2 && i != 3) {
                tabelaCadastrosConsultas.getColumnModel().getColumn(i).setCellRenderer(renderizadorDeCelula);
            }
        }

        for (PlanoDeSaude planoDeSaude : consultaController.listarTodosPlanoDeSaude()) {
            comboBoxPlano.addItem(planoDeSaude);
        }

        for (Paciente paciente : consultaController.listarTodosPacientes()) {
            comboBoxPaciente.addItem(paciente);
        }

        for (Medico medico : consultaController.listarTodosMedicos()) {
            comboBoxMedico.addItem(medico);
        }

        DefaultTableModel tabelaPadrao = (DefaultTableModel) tabelaCadastrosConsultas.getModel();

        for (Consulta consulta : consultaController.listarTodasConsultas()) {
            tabelaPadrao.addRow(new Object[]{
                consulta.getId(),
                consulta.getPlano().toString(),
                consulta.getPaciente().toString(),
                consulta.getMedico().toString(),
                consulta.getSala(),
                sdfData.format(consulta.getDataDaConsulta()),
                consulta.getHoraDaConsulta()
            });
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelDados = new javax.swing.JPanel();
        labelSala = new javax.swing.JLabel();
        txtSala = new javax.swing.JTextField();
        labelPlano = new javax.swing.JLabel();
        comboBoxPlano = new javax.swing.JComboBox<>();
        labelDataConsulta = new javax.swing.JLabel();
        txtDataConsulta = new javax.swing.JFormattedTextField();
        labelPaciente = new javax.swing.JLabel();
        comboBoxPaciente = new javax.swing.JComboBox<>();
        labelHoraConsulta = new javax.swing.JLabel();
        txtHoraConsulta = new javax.swing.JFormattedTextField();
        labelMedico = new javax.swing.JLabel();
        comboBoxMedico = new javax.swing.JComboBox<>();
        buttonCadastrar = new javax.swing.JButton();
        labelBanner = new javax.swing.JLabel();
        scrollPaneTabela = new javax.swing.JScrollPane();
        tabelaCadastrosConsultas = new javax.swing.JTable();
        buttonExcluir = new javax.swing.JButton();
        buttonAlterar = new javax.swing.JButton();
        buttonHome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastrar Consulta");
        setResizable(false);

        painelDados.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Formul√°rio de Cadastro da Consulta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        labelSala.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelSala.setText("SALA:");

        labelPlano.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelPlano.setText("PLANO:");

        comboBoxPlano.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comboBoxPlano.setToolTipText("");

        labelDataConsulta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelDataConsulta.setText("DATA DA CONSULTA:");

        try {
            txtDataConsulta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        labelPaciente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelPaciente.setText("PACIENTE:");

        comboBoxPaciente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        labelHoraConsulta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelHoraConsulta.setText("HORA DA CONSULTA:");

        try {
            txtHoraConsulta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        labelMedico.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelMedico.setText("MEDICO");

        comboBoxMedico.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        buttonCadastrar.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        buttonCadastrar.setText("Cadastrar");
        buttonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelDadosLayout = new javax.swing.GroupLayout(painelDados);
        painelDados.setLayout(painelDadosLayout);
        painelDadosLayout.setHorizontalGroup(
            painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelDadosLayout.createSequentialGroup()
                        .addComponent(labelSala)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSala, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelDadosLayout.createSequentialGroup()
                        .addComponent(labelDataConsulta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelDadosLayout.createSequentialGroup()
                        .addComponent(labelHoraConsulta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHoraConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelDadosLayout.createSequentialGroup()
                        .addComponent(labelPlano)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxPlano, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelDadosLayout.createSequentialGroup()
                        .addComponent(labelMedico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxMedico, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelDadosLayout.createSequentialGroup()
                        .addComponent(labelPaciente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(buttonCadastrar)
                .addContainerGap())
        );
        painelDadosLayout.setVerticalGroup(
            painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelSala, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSala)
                    .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxPlano, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(labelPlano, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDataConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDataConsulta)
                    .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxPaciente)
                        .addComponent(labelPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelHoraConsulta)
                    .addComponent(txtHoraConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painelDadosLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(painelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboBoxMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMedico)
                            .addComponent(buttonCadastrar))))
                .addContainerGap())
        );

        labelBanner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/banner.PNG"))); // NOI18N

        tabelaCadastrosConsultas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tabelaCadastrosConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "PLANO", "PACIENTE", "MEDICO", "SALA", "DATA CONSULTA", "HORA CONSULTA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaCadastrosConsultas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        scrollPaneTabela.setViewportView(tabelaCadastrosConsultas);
        if (tabelaCadastrosConsultas.getColumnModel().getColumnCount() > 0) {
            tabelaCadastrosConsultas.getColumnModel().getColumn(0).setResizable(false);
            tabelaCadastrosConsultas.getColumnModel().getColumn(0).setPreferredWidth(50);
            tabelaCadastrosConsultas.getColumnModel().getColumn(1).setResizable(false);
            tabelaCadastrosConsultas.getColumnModel().getColumn(1).setPreferredWidth(120);
            tabelaCadastrosConsultas.getColumnModel().getColumn(2).setResizable(false);
            tabelaCadastrosConsultas.getColumnModel().getColumn(2).setPreferredWidth(150);
            tabelaCadastrosConsultas.getColumnModel().getColumn(3).setResizable(false);
            tabelaCadastrosConsultas.getColumnModel().getColumn(3).setPreferredWidth(150);
            tabelaCadastrosConsultas.getColumnModel().getColumn(4).setResizable(false);
            tabelaCadastrosConsultas.getColumnModel().getColumn(4).setPreferredWidth(50);
            tabelaCadastrosConsultas.getColumnModel().getColumn(5).setResizable(false);
            tabelaCadastrosConsultas.getColumnModel().getColumn(5).setPreferredWidth(120);
            tabelaCadastrosConsultas.getColumnModel().getColumn(6).setResizable(false);
            tabelaCadastrosConsultas.getColumnModel().getColumn(6).setPreferredWidth(120);
        }

        buttonExcluir.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        buttonExcluir.setText("EXCLUIR");
        buttonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirActionPerformed(evt);
            }
        });

        buttonAlterar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        buttonAlterar.setText("ALTERAR");
        buttonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAlterarActionPerformed(evt);
            }
        });

        buttonHome.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        buttonHome.setText("Home");
        buttonHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelBanner, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(painelDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(scrollPaneTabela))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(buttonExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonHome, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(buttonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelBanner, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(buttonExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(buttonHome, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadastrarActionPerformed

        Consulta consulta = new Consulta();
        consulta.setId(idConsulta);
        consulta.setSala(txtSala.getText().trim());
        consulta.setPlano((PlanoDeSaude) comboBoxPlano.getSelectedItem());
        consulta.setPaciente((Paciente) comboBoxPaciente.getSelectedItem());
        consulta.setMedico((Medico) comboBoxMedico.getSelectedItem());

        try {
            consulta.setDataDaConsulta(sdfData.parse(txtDataConsulta.getText()));
            consulta.setHoraDaConsulta(txtHoraConsulta.getText());

            if (idConsulta > 0) {
                consultaController.atualizarConsulta(consulta);
                JOptionPane.showMessageDialog(null, "Consulta alterada com Sucesso!");
                dispose();
                TelaPrincipal telaPrincipal = new TelaPrincipal();
                telaPrincipal.setVisible(true);
                telaPrincipal.setLocationRelativeTo(null);
            } else {
                if (consultaController.cadastrarConsulta(consulta)) {
                    JOptionPane.showMessageDialog(null, "Consulta cadastrado com Sucesso!");

                    dispose();
                    TelaPrincipal telaPrincipal = new TelaPrincipal();
                    telaPrincipal.setVisible(true);
                    telaPrincipal.setLocationRelativeTo(null);
                }
            }
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "A data da consulta deve ser preenchida");
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_buttonCadastrarActionPerformed

    private void buttonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirActionPerformed
        int linhaSelecionada = -1;

        linhaSelecionada = tabelaCadastrosConsultas.getSelectedRow();

        if (linhaSelecionada >= 0) {
            int idConsultaDoBanco = (Integer) tabelaCadastrosConsultas.getValueAt(linhaSelecionada, 0);
            try {
                consultaDAO.deletar(consultaDAO.buscarPorId(idConsultaDoBanco));
                refreshTabela();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "√â necess√°rio selecionar uma linha");
        }
    }//GEN-LAST:event_buttonExcluirActionPerformed

    private void buttonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAlterarActionPerformed
        int linhaSelecionada = -1;

        linhaSelecionada = tabelaCadastrosConsultas.getSelectedRow();

        if (linhaSelecionada >= 0) {
            int idConsultaDoBanco = (Integer) tabelaCadastrosConsultas.getValueAt(linhaSelecionada, 0);
            try {
                Consulta consultaDoBanco = (Consulta) consultaDAO.buscarPorId(idConsultaDoBanco);
                atualizarTelaCadastroConsulta(consultaDoBanco);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "√â necess√°rio selecionar uma linha");
        }
    }//GEN-LAST:event_buttonAlterarActionPerformed

    private void buttonHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHomeActionPerformed

        dispose();
        new TelaPrincipal().setVisible(true);
    }//GEN-LAST:event_buttonHomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaCadastroConsulta().setVisible(true);
                } catch (SQLException ex) {
                    System.out.println(ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAlterar;
    private javax.swing.JButton buttonCadastrar;
    private javax.swing.JButton buttonExcluir;
    private javax.swing.JButton buttonHome;
    private javax.swing.JComboBox<Medico> comboBoxMedico;
    private javax.swing.JComboBox<Paciente> comboBoxPaciente;
    private javax.swing.JComboBox<PlanoDeSaude> comboBoxPlano;
    private javax.swing.JLabel labelBanner;
    private javax.swing.JLabel labelDataConsulta;
    private javax.swing.JLabel labelHoraConsulta;
    private javax.swing.JLabel labelMedico;
    private javax.swing.JLabel labelPaciente;
    private javax.swing.JLabel labelPlano;
    private javax.swing.JLabel labelSala;
    private javax.swing.JPanel painelDados;
    private javax.swing.JScrollPane scrollPaneTabela;
    private javax.swing.JTable tabelaCadastrosConsultas;
    private javax.swing.JFormattedTextField txtDataConsulta;
    private javax.swing.JFormattedTextField txtHoraConsulta;
    private javax.swing.JTextField txtSala;
    // End of variables declaration//GEN-END:variables

    private void refreshTabela() throws SQLException {
        new TelaCadastroConsulta().setVisible(true);
        dispose();
    }

    private void atualizarTelaCadastroConsulta(Consulta consultaDoBanco) throws SQLException {
        idConsulta = consultaDoBanco.getId();
        txtSala.setText(consultaDoBanco.getSala());
        txtDataConsulta.setText(sdfData.format(consultaDoBanco.getDataDaConsulta()));
        txtHoraConsulta.setText(consultaDoBanco.getHoraDaConsulta());

        Medico medicoDoBanco = consultaDoBanco.getMedico();
        for (int i = 0; i < comboBoxMedico.getItemCount(); i++) {
            Medico medicoTela = comboBoxMedico.getItemAt(i);
            if (medicoTela.getCRM() == medicoDoBanco.getCRM()) {
                comboBoxMedico.setSelectedIndex(i);
                break;
            }
        }
        Paciente pacienteDoBanco = consultaDoBanco.getPaciente();
        for (int i = 0; i < comboBoxPaciente.getItemCount(); i++) {
            Paciente pacienteDaTela = comboBoxPaciente.getItemAt(i);
            if (pacienteDaTela.getId() == pacienteDoBanco.getId()) {
                comboBoxPaciente.setSelectedIndex(i);
                break;
            }
        }
        PlanoDeSaude planoDoBanco = consultaDoBanco.getPlano();
        for (int i = 0; i < comboBoxPlano.getItemCount(); i++) {
            PlanoDeSaude planoDaTela = comboBoxPlano.getItemAt(i);
            if (planoDaTela.getId() == planoDoBanco.getId()) {
                comboBoxPlano.setSelectedIndex(i);
                break;
            }
        }

    }

}
